package com.nicht.promote.DataStruct_Algorithrem.src.Algorithrem.Leetcode;

/**
 * @Author Nicht
 * @Description
 * @Time 2021/9/1
 * @Link
 */
public class day1 {
    public static void main(String[] args) {

    }

    public int[] searchRange(int[] nums, int target) {
   /*     HashMap<Integer,Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            if(map.containsKey(nums[i])){

            }
        }*/
   return  null;
    }


    





//560493&265167,1649990&265167,1918414&265167,2217111&265167,3246520&265167,
//4573534&265167,4670097&265167,5384772&265167,5555307&265167,6319614&265167,7321945&265167,7837245&265167,8306961&265167,9030280&265167,17418374&265167,17614262&265167,18495917&265167,18678887&265167,23907683&265167,26035331&265167,29063476&265167,37507673&265167,42378777&265167,52216475&265167,58651022&265167,60974978&265167,65849072&265167,66602105&265167,66802807&265167,69806745&265167,70956844&265167,72562023&265167,73172466&265167,75528156&265167,75900707&265167,76313801&265167,76407701&265167,76421635&265167,78136897&265167,78781122&265167
//81112656&265167,81614248&265167,83373818&265167,84667345&265167,84910684&265167,85412763&265167,86804683&265167,87269775&265167,87600753&265167,88538373&265167,90922848&265167,91415300&265167,91552905&265167,91598338&265167,92505730&265167,93048275&265167,93092280&265167,93130841&265167,93139399&265167,93154664&265167,93171826&265167,94007690&265167,94309346&265167,94919836&265167,96492746&265167,96682272&265167,96773329&265167,96899748&265167,96969017&265167
}
