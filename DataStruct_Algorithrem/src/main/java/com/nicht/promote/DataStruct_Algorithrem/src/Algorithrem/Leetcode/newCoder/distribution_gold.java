package com.nicht.promote.DataStruct_Algorithrem.src.Algorithrem.Leetcode.newCoder;

import cn.hutool.http.HttpUtil;
import com.alibaba.fastjson.JSON;
import java.util.*;

public class distribution_gold {

    public static void main(String[] args) {
        List<String> originData = Arrays.asList("买静","王燕13","周平2","丁玉妹","鲍袁园2","严张芬","钱杰4","王小芳3","黄莉莉3","吕亚丽","邹卉","王成11","陆佳逸3","周梦新2","单骥科2","王肖肖8","杨阳30","钱蕾2","甘叶娟2","罗轩","仲广斌2","严梦迪","戴宏程3","吕美丽","杜磊","曹婉清","鲍迎杰","张锡梅2","吕浩然","洪文静","王丽2","孙晓凤","张亚楠","吴晓","王珣","张兰兰","龚雨娉","汤怀强","卢亮亮","王毅10","何燕秋","高迎会","崔轶伟","张荔荔5","黄玉莲","邱晨晨","翟海洋","王茹4","李鹏8","韩金杰","刘仁慧子","李曼宁","刘艾卓","王佳望","纪迎迎","姜帅3","张芬芬3","李梦8","薛竣杰2","王正正3","彭烁2","刁佳佳2","许婷11","马伟2","陆腾娇2","王丹2","陈晓燕","李娟11","罗哲宇","程惠君","陈振华","王聪4","汪慧21","孙玉娟","陈晓丽6","王江4","赵颖3","徐后杏","王晶45","张倩倩4","冯云3","王靖46","周罡正","韩涵2","沙怡含2","王婷23","陈昌3","王甜甜5","周浩7","葛超2","王宁10","叶婷4","王朝26","丁实2","赵鹏","张晓女","张婷6","周生茹","蒋燕7","吴菁菁3","高洁8","王伟民","阎士臣","朱慧丽","周正2","方园6","杨思佳","吴天寅","贾劲孜","马晨鸣3","范嘉伟","胡嘉2","石磊7","袁颖4","董宇5","马宇5","彭乐乐","仝雨雨","王贺6","沈楠","黄梦3","周静18","王涛20","孙艳9","郭臣2","张婷婷15","秦康3","肖梦洁2","王冬平3","张伟伟8","李晓4","龙小挺2","王琦14","王丹21","叶江南2","王雨露3","沈乐3","张曼7","李心如","顾南南2","尤影","于静14","宋道鹏2","霍紫琪","孙海茹","赵婉莹","王子博3");

        List<String> excludeData1 = Arrays.asList("严张芬","鲍袁园2","丁玉妹","黄莉莉3","钱杰4","王成11","王燕13","邹卉","陆佳逸3","买静","仲广斌2","罗轩","单骥科2","张丹9","戴宏程3","严梦迪","杨阳30","王肖肖8","钱蕾2","吕美丽","甘叶娟2","周梦新2","周平2","杜磊","王小芳3","吕亚丽","沈乐3","秦康3","张曼7","李心如","顾南南2","肖梦洁2","王冬平3","张伟伟8","李晓4","尤影","龙小挺2","宋道鹏2","曹婉清","霍紫琪","王琦14","施如楠","王丹21","于静14","叶江南2","孙海茹","鲍迎杰","赵婉莹","张锡梅2","吕浩然","洪文静","王雨露3","王子博3");

       List<Integer>   sourceData = Arrays.asList(33855,10138,15455,32912,6375,33433,33564,32874,17865,33739,33843,23107,31739,32746,16166,33678,33709,17580,33856,33202,32855,6380,15138,9041,32741,31802,33538,13320,33903,33776,33407,2414,33734,31666,33907,33459,33366,19183,3485,33375,9409,33012,12806,12803,33980,6181,33350,33430,20382,33850,33563,33839,32835,32917,31829,33520,19566,17344,33351,33388,30982,31443,33431,22681,33320,31994,32834,15994,23271,32979,33731,33464,33893,2617,33579,1707,18451,33886,33356,33487,34042,33640,16263,31683,32906,33842,33565,16454,31808,33853,7953,8131,33567,33527,23019,32800,22279,33685,33905,33744,32838,33809,32980,18825,33406,17472,32853,22084,33354,33716,33697,33540,33488,13364,33562,33472,33844,32878,33841,31912,1780,21970,21517,33909,16176,32836,19487,32687,33908,19388,33493,31757,4255,33566,33462,22798,33353,33852,33494,33324,16715,18652,14144,33789,33733,21839,16680,33432,13312);
       List<Integer>   excludeData = Arrays.asList(33564,33843,33776,33407,33907,33980,33430,33563,33839,33431,33731,33565,33853,33685,33406,33488,33562,33472,33844,33909,33908,33852,33494,33733);
        System.out.println();

        String url = "http://tchat.tuniu.org/chat/api/groupCustomer/updateReceptionGroupCustomer?cb=success_jsonpCallback&_=1719469895056&d=";
        Map<String,Object> d = new HashMap<>();
        d.put("sessionId","AC0BDD340416D4D0552D6758D1DE41D0");
        d.put("groupId",5361);
        d.put("capacity",10);
        d.put("enabled",0);
       List<Integer> ids =  subList(sourceData,excludeData);
        for (Integer id :ids){
            d.put("customerId",id);
            String requestUrl =url+ JSON.toJSONString(d);
            String getRes = HttpUtil.get(requestUrl,5000);
            System.out.println("customerId = "+id+"requestUrl = "+requestUrl +" requestResult = "+getRes);
        }
    }

    public static <R> List<R> subList(List<R> source, List<R> excludeData){
        List<R> rs = new ArrayList<>();
        for (R d : source){
            if(!excludeData.contains(d)){
                rs.add(d);
            }
        }
        return  rs;
    }
        // 一个 数组 length = n 可以对每个数进行 /2 保留小数 求最少对几个数/2后才能使得 数组存在和为M的子数组 没有输出-1

    int spiltGold(int [] golds, int targetM){

        int splitCount = 0;
        Arrays.sort(golds);

        Map<Integer,Integer> numCache = new HashMap<>(16);
        for (int i = 0; i < golds.length; i++) {
            numCache.put(golds[i],numCache.getOrDefault(golds[i],0)+1);
        }

        for (int i = 0; i < golds.length; i++) {

        }

       return  0;
        }




}
